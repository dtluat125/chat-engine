{"version":3,"sources":["components/LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","useState","userName","setUserName","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authProject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","action","type","name","id","required","value","onChange","target","for","App","getItem","handleClick","clear","height","projectID","userSecret","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAwDeA,EArDG,WACd,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAEE,iBACIC,EAAc,CAChB,aAAc,uCACd,YAAaV,EACb,cAAeE,GALF,kBAQPS,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IARjD,OASbI,aAAaC,QAAQ,WAAYf,GACjCc,aAAaC,QAAQ,WAAYb,GACjCc,OAAOC,SAASC,SAXH,kDAabb,EAAS,0CAbI,0DAAH,sDAiBlB,OACI,sBAAKc,UAAU,eAAf,UACA,yCACA,uBAAMC,SAAUd,EAAce,OAAO,GAAGF,UAAU,aAAlD,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,KAAK,OAAOC,GAAG,aAAaC,UAAQ,EAC/CC,MAAO1B,EACP2B,SAAU,SAACpB,GAAD,OAAON,EAAYM,EAAEqB,OAAOF,UAE9C,uBAAOG,IAAI,aAAaV,UAAU,eAAlC,SACI,sBAAMA,UAAU,YAAhB,2BAIR,sBAAKA,UAAU,WAAf,UACI,uBAAOG,KAAK,WAAWE,GAAG,WAAWC,UAAQ,EACrCC,MAAOxB,EACPyB,SAAU,SAACpB,GAAD,OAAOJ,EAAYI,EAAEqB,OAAOF,UAG9C,uBAAOG,IAAI,WAAWV,UAAU,eAAhC,SACI,sBAAMA,UAAU,cAAhB,2BAGR,wBAAQA,UAAU,SAASG,KAAK,SAAhC,wBAGJ,oBAAIH,UAAU,QAAd,SAAuBf,Q,KCdhB0B,MA9Bf,WACE,GAAIhB,aAAaiB,QAAQ,YACrB,CAEF,IAAMC,EAAW,uCAAG,sBAAAxB,EAAA,uDACI,CAClB,aAAc,uCACd,YAAaM,aAAaiB,QAAQ,YAClC,cAAejB,aAAaiB,QAAQ,cAGpCf,OAAOF,aAAamB,QACpBjB,OAAOC,SAASC,SARF,2CAAH,qDAUnB,OACI,sBAAKC,UAAU,gBAAf,UACA,cAAC,IAAD,CACEe,OAAO,QACPC,UAAY,uCACZnC,SAAUc,aAAaiB,QAAQ,YAC/BK,WAAYtB,aAAaiB,QAAQ,cAEnC,wBAAQP,GAAK,oBAAoBF,KAAK,SAASe,QAAUL,EAAzD,wBArBkC,OAAO,cAAC,EAAD,KCIhCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.844748d9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport './style.css'\r\nconst LoginForm = () => {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const authProject = {\r\n            'Project-ID': '8381c33d-57cd-41b6-9374-de16a78ede49',\r\n            'User-Name': userName,\r\n            'User-Secret': password,\r\n        }\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authProject})\r\n            localStorage.setItem('username', userName);\r\n            localStorage.setItem('password', password);\r\n            window.location.reload();\r\n        } catch (error){\r\n            setError('Wrong username or password. Try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-form\">\r\n        <p>CHAT APP</p>\r\n        <form onSubmit={handleSubmit} action=\"\" className=\"first-form\">\r\n            <div className=\"username\">\r\n                <input type=\"text\" name=\"name\" id=\"name-input\" required\r\n                        value={userName}\r\n                        onChange={(e) => setUserName(e.target.value)}        \r\n                />\r\n                <label for=\"name-input\" className=\"content-name\">\r\n                    <span className=\"name-span\">Username</span>\r\n                </label>\r\n\r\n            </div>\r\n            <div className=\"password\">\r\n                <input type=\"password\" id=\"password\" required\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n\r\n                />\r\n                <label for=\"password\" className=\"content-name\">\r\n                    <span className=\" name-span \">Password</span>\r\n                </label>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\">Sign in</button>\r\n        </form>\r\n\r\n        <h2 className=\"error\">{error}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import {ChatEngine} from 'react-chat-engine';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\nimport axios from 'axios'\nimport { ChatEngineWrapper, Socket, ChatList, ChatFeed, ChatSettings } from 'react-chat-engine'\nimport { Col, Row, Container } from 'react-grid-system'\n\nfunction App() {\n  if(!localStorage.getItem('username')) return <LoginForm/>;\n  else{\n  \n    const handleClick = async () =>{\n        const authProject = {\n          'Project-ID': '1e5af137-df40-4f47-9963-6ef0db4afb38',\n          'User-Name': localStorage.getItem('username'),\n          'User-Secret': localStorage.getItem('password'),\n      }\n  \n          window.localStorage.clear();\n          window.location.reload();\n    }\n  return (\n      <div className=\"App-container\" >\n      <ChatEngine\n        height=\"100vh\"\n        projectID = '8381c33d-57cd-41b6-9374-de16a78ede49'\n        userName={localStorage.getItem('username')}\n        userSecret={localStorage.getItem('password')}\n      />\n      <button id = \"log-out-container\" type=\"button\" onClick={ handleClick}>\n            LOG OUT\n      </button>   \n    </div>\n  )     \n}\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}